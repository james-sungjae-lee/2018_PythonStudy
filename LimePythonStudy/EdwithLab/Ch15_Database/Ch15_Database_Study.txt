Ch15_Database

Part 1: Database

과거의 데이터 저장 : 순차적 ( sequential )

현대의 데이터 저장 : 대량의 데이터 수정 / 삽입 / 삭제 등이 필요하다
> 빠른 속도로 데이터에 접근할 방법 / 다른 데이터와의 연동 등의 문제 해결
= 데이터베이스 시스템의 구현

관계형 데이터베이스
> 강력한 수학적 방법에 기반을 두고 있음
> 효과적인 정렬 방법의 방법으로 기존의 인덱싱 데이터베이스를 대체하게 됨
> 여러 시트의 엑셀이라 생각하면 편하다

SQL : Structured Query Language
> 질의형 언어. 질문에 답을 알려준다. 절차형 언어가 아니다.
> 실제 데이터를 검색하고, 반복하는 과정은 DBMS 가 처리한다.
> Create Read Update Delete CRUD 가 우리가 해야 할 것이다.

SQL 을 활용하여 데이터 분석을 진행할 것이다.

DBA 와 Developer 의 역할 분담
> DBA : 데이터베이스 자체를 관리
> Developer : DB Server 에서 데이터를 가져와 Application 을 관리

다양한 DBMS
Oracle
MySql
SqlServer
MariaDB

SQLite3 로 SQLite 를 파이썬에서 사용 가능하다
> 매우 가벼운 DBMS 이다.


Part 2 : SQL : Structured Query Language

CREATE TABLE 'Users' ('name' TEXT, 'email' TEXT);
> Users 라는 테이블을 생성
> 해당 테이블에는 name 과 email 이 TEXT 형식으로 컬럼이 생성

INSERT INTO Users(name, email) VAVLUES ('Kristin', 'kf@umich.edu')
> Users 테이블에 name, email 이 VALUES 값과 같은 하나의 튜플을 삽입한다.
> 각 줄에 세미콜론을 붙여야 각각이 따로 진행된다.

DELETE FROM Users WHERE email='ted@umich.edu'
> email 이 ted~ 인 튜플을 Users 에서 찾아 삭제한다.

UPDATE Users SET name = 'Charles'
             WHERE email = 'csev@umich.edu'
> email 이 csev~ 인 튜플을 찾아 name 을 Charles 로 변경한다.

SELECT * FROM Users
> Users 테이블의 모든 튜플을 선택하여 출력하라

SELECT * FROM Users WHERE email = 'abc'
> Users 테이블의 email 이 abc 인 값을 찾아 모두 출력하라

SELECT * FROM Users ORDER BY email ( DESC )
> email 을 순차적으로 오름차순 정렬하여 모두 출력하라 ( 혹은 내림차순 )
t














